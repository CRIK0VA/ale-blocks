{"version":3,"file":"block-fields/index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAqC;AAKJ;AACW;AACS;AACoB;AAClD;AAER,SAASS,IAAIA,CAAA,EAAG;EAC9B,MAAMC,QAAQ,GAAGN,0DAAS,CACvBO,MAAM,IAAMA,MAAM,CAAE,aAAc,CAAC,CAACC,kBAAkB,CAAC,CAAC,EAC1D,EACD,CAAC;EACD,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAGT,mEAAa,CAAE,UAAU,EAAEK,QAAQ,EAAE,MAAO,CAAC;EACvE,MAAMK,QAAQ,GAAGF,IAAI,CAAE,uBAAuB,CAAE;EAChD,MAAMG,cAAc,GAAKC,GAAG,IAAM;IACjCH,OAAO,CAAE;MAAE,GAAGD,IAAI;MAAEK,qBAAqB,EAAED;IAAI,CAAE,CAAC;EACnD,CAAC;EAED,OACCE,oDAAA,CAAAC,2CAAA,QACCD,oDAAA,CAACjB,sEAAiB,QACjBiB,oDAAA,CAACZ,4DAAS;IAACc,KAAK,EAAGrB,mDAAE,CAAE,YAAa;EAAG,GACtCmB,oDAAA,CAACX,2DAAQ,QACRW,oDAAA,CAACb,8DAAW;IACXgB,KAAK,EAAGtB,mDAAE,CAAE,WAAY,CAAG;IAC3BuB,KAAK,EAAGR,QAAU;IAClBS,QAAQ,EAAGR;EAAgB,CAC3B,CACQ,CACA,CACO,CAAC,EACpBG,oDAAA;IAAA,GAAUlB,sEAAa,CAAC;EAAC,GACxBkB,oDAAA,CAAChB,6DAAQ;IACRsB,OAAO,EAAC,IAAI;IACZD,QAAQ,EAAGR,cAAgB;IAC3BU,cAAc,EAAG,EAAI;IACrBH,KAAK,EAAGR;EAAU,CAClB,CACG,CACJ,CAAC;AAEL;;;;;;;;;;;;;;;;AC7CsD;AAChC;AACI;AACU;AAEpCY,oEAAiB,CAAEC,6CAAa,EAAE;EACjCE,IAAI,EAAErB,6CAAIA;AACX,CAAE,CAAC;;;;;;;;;;;ACPH;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,MAAM,qBAAqB;WAC3B;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;;;;;UEjDA;UACA;UACA;UACA;UACA","sources":["webpack://ale-blocks/./src/block-fields/edit.js","webpack://ale-blocks/./src/block-fields/index.js","webpack://ale-blocks/./src/block-fields/editor.scss?1cf3","webpack://ale-blocks/./src/block-fields/style.scss?5c38","webpack://ale-blocks/external window \"React\"","webpack://ale-blocks/external window [\"wp\",\"blockEditor\"]","webpack://ale-blocks/external window [\"wp\",\"blocks\"]","webpack://ale-blocks/external window [\"wp\",\"components\"]","webpack://ale-blocks/external window [\"wp\",\"coreData\"]","webpack://ale-blocks/external window [\"wp\",\"data\"]","webpack://ale-blocks/external window [\"wp\",\"i18n\"]","webpack://ale-blocks/webpack/bootstrap","webpack://ale-blocks/webpack/runtime/chunk loaded","webpack://ale-blocks/webpack/runtime/compat get default export","webpack://ale-blocks/webpack/runtime/define property getters","webpack://ale-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://ale-blocks/webpack/runtime/make namespace object","webpack://ale-blocks/webpack/runtime/jsonp chunk loading","webpack://ale-blocks/webpack/before-startup","webpack://ale-blocks/webpack/startup","webpack://ale-blocks/webpack/after-startup"],"sourcesContent":["import { __ } from '@wordpress/i18n';\nimport {\n\tuseBlockProps,\n\tInspectorControls,\n\tRichText,\n} from '@wordpress/block-editor';\nimport { useSelect } from '@wordpress/data';\nimport { useEntityProp } from '@wordpress/core-data';\nimport { TextControl, PanelBody, PanelRow } from '@wordpress/components';\nimport './editor.scss';\n\nexport default function Edit() {\n\tconst postType = useSelect(\n\t\t( select ) => select( 'core/editor' ).getCurrentPostType(),\n\t\t[]\n\t);\n\tconst [ meta, setMeta ] = useEntityProp( 'postType', postType, 'meta' );\n\tconst titleOne = meta[ '_meta_field_title_one' ];\n\tconst updateTitleOne = ( val ) => {\n\t\tsetMeta( { ...meta, _meta_field_title_one: val } );\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={ __( 'MetaFields' ) }>\n\t\t\t\t\t<PanelRow>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={ __( 'Title One' ) }\n\t\t\t\t\t\t\tvalue={ titleOne }\n\t\t\t\t\t\t\tonChange={ updateTitleOne }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</PanelRow>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<div { ...useBlockProps() }>\n\t\t\t\t<RichText\n\t\t\t\t\ttagName=\"h2\"\n\t\t\t\t\tonChange={ updateTitleOne }\n\t\t\t\t\tallowedFormats={ [] }\n\t\t\t\t\tvalue={ titleOne }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</>\n\t);\n}\n","import { registerBlockType } from '@wordpress/blocks';\nimport './style.scss';\nimport Edit from './edit';\nimport metadata from './block.json';\n\nregisterBlockType( metadata.name, {\n\tedit: Edit,\n} );\n","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","module.exports = window[\"React\"];","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"blocks\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"coreData\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"i18n\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"block-fields/index\": 0,\n\t\"block-fields/style-index\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = globalThis[\"webpackChunkale_blocks\"] = globalThis[\"webpackChunkale_blocks\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [\"block-fields/style-index\"], () => (__webpack_require__(\"./src/block-fields/index.js\")))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n",""],"names":["__","useBlockProps","InspectorControls","RichText","useSelect","useEntityProp","TextControl","PanelBody","PanelRow","Edit","postType","select","getCurrentPostType","meta","setMeta","titleOne","updateTitleOne","val","_meta_field_title_one","createElement","Fragment","title","label","value","onChange","tagName","allowedFormats","registerBlockType","metadata","name","edit"],"sourceRoot":""}